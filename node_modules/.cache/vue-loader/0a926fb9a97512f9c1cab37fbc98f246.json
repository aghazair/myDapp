{"remainingRequest":"C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vueproject\\mydapp\\node_modules\\vue-metamask\\src\\VueMetamask.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\vueproject\\mydapp\\node_modules\\vue-metamask\\src\\VueMetamask.vue","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgV2ViMyBmcm9tICJ3ZWIzIjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgcHJvcHM6IHsNCiAgICB1c2VyTWVzc2FnZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogIm51bGwiLA0KICAgIH0sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHdlYjM6IG51bGwsDQogICAgICBNZXRhTWFza0lkOiAiMSIsIC8vIG1haW4gbmV0IG5ldElEDQogICAgICBuZXRJRDogIjEiLCAvLyB1c2VyIG1ldGFtYXNrIGlkDQogICAgICBNZXRhTWFza0FkZHJlc3M6ICIiLCAvLyB1c2VyIEFkZHJlc3MNCiAgICAgIFdlYjNJbnRlcnZhbDogbnVsbCwNCiAgICAgIEFjY291bnRJbnRlcnZhbDogbnVsbCwNCiAgICAgIE5ldHdvcmtJbnRlcnZhbDogbnVsbCwNCiAgICAgIHN0YXRlTG9nOiBudWxsLA0KICAgICAgaXNDb21wbGV0ZTogZmFsc2UsDQogICAgICB0eXBlOiAiSU5JVCIsDQogICAgICBNZXRhbWFza01zZzogew0KICAgICAgICBMT0FEX01BVEFNQVNLX1dBTExFVF9FUlJPUjogIkxvYWRpbmcgbWV0YW1hc2sgZXJyb3IsIHBsZWFzZSB0cnkgbGF0ZXIiLA0KICAgICAgICBFTVBUWV9NRVRBTUFTS19BQ0NPVU5UOg0KICAgICAgICAgICJQbGVhc2UgbG9nIGluIHRvIHlvdXIgbWV0YW1hc2sgdG8gY29udGludWUgd2l0aCB0aGlzIGFwcC4iLA0KICAgICAgICBORVRXT1JLX0VSUk9SOiAiVGhlIGNvbm5lY3Rpb24gaXMgYWJub3JtYWwsIHBsZWFzZSB0cnkgYWdhaW4iLA0KICAgICAgICBNRVRBTUFTS19OT1RfSU5TVEFMTDogIlBsZWFzZSBpbnN0YWxsIG1ldGFtYXNrIGZvciB0aGlzIGFwcGxpY2F0aW9uIiwNCiAgICAgICAgTUVUQU1BU0tfVEVTVF9ORVQ6ICJDdXJyZW50bHkgbm90IGluIHRoZSBtYWluIG5ldHdvcmsuIiwNCiAgICAgICAgTUVUQU1BU0tfTUFJTl9ORVQ6ICJDdXJyZW50bHkgTWFpbiBuZXR3b3JrIiwNCiAgICAgICAgVVNFUl9ERU5JRURfQUNDT1VOVF9BVVRIT1JJWkFUSU9OOiAiVXNlciBkZW5pZWQgYWNjb3VudCBhdXRob3JpemF0aW9uIiwNCiAgICAgIH0sDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNoZWNrV2ViMygpIHsNCiAgICAgIGxldCB3ZWIzID0gd2luZG93LndlYjM7DQogICAgICBpZiAodHlwZW9mIHdlYjMgPT09ICJ1bmRlZmluZWQiKSB7DQogICAgICAgIHRoaXMud2ViMyA9IG51bGw7DQogICAgICAgIHRoaXMuTG9nKHRoaXMuTWV0YW1hc2tNc2cuTUVUQU1BU0tfTk9UX0lOU1RBTEwsICJOT19JTlNUQUxMX01FVEFNQVNLIik7DQogICAgICB9DQogICAgfSwNCiAgICBjaGVja0FjY291bnRzKCkgew0KICAgICAgaWYgKHRoaXMud2ViMyA9PT0gbnVsbCkgcmV0dXJuOw0KICAgICAgdGhpcy53ZWIzLmV0aC5nZXRBY2NvdW50cygoZXJyLCBhY2NvdW50cykgPT4gew0KICAgICAgICBjb25zb2xlLmxvZygpOw0KDQogICAgICAgIGlmIChlcnIgIT0gbnVsbCkNCiAgICAgICAgICByZXR1cm4gdGhpcy5Mb2codGhpcy5NZXRhbWFza01zZy5ORVRXT1JLX0VSUk9SLCAiTkVUV09SS19FUlJPUiIpOw0KICAgICAgICBpZiAoYWNjb3VudHMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgdGhpcy5NZXRhTWFza0FkZHJlc3MgPSAiIjsNCiAgICAgICAgICB0aGlzLkxvZyh0aGlzLk1ldGFtYXNrTXNnLkVNUFRZX01FVEFNQVNLX0FDQ09VTlQsICJOT19MT0dJTiIpOw0KICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLk1ldGFNYXNrQWRkcmVzcyA9IGFjY291bnRzWzBdOyAvLyB1c2VyIEFkZHJlc3MNCiAgICAgIH0pOw0KICAgIH0sDQogICAgY2hlY2tOZXRXb3JrKCkgew0KICAgICAgdGhpcy53ZWIzLnZlcnNpb24uZ2V0TmV0d29yaygoZXJyLCBuZXRJRCkgPT4gew0KICAgICAgICAvLyBNYWluIE5ldHdvcms6IDENCiAgICAgICAgLy8gUm9wc3RlbiBUZXN0IE5ldHdvcms6IDMNCiAgICAgICAgLy8gS292YW4gVGVzdCBOZXR3b3JrOiA0Mg0KICAgICAgICAvLyBSaW5rZWJ5IFRlc3QgTmV0d29yazogNA0KICAgICAgICBpZiAoZXJyICE9IG51bGwpDQogICAgICAgICAgcmV0dXJuIHRoaXMuTG9nKHRoaXMuTWV0YW1hc2tNc2cuTkVUV09SS19FUlJPUiwgIk5FVFdPUktfRVJST1IiKTsNCiAgICAgICAgdGhpcy5uZXRJRCA9IG5ldElEOyAvL1VzZXIgTWV0YU1hc2sncyBjdXJyZW50IHN0YXR1cw0KICAgICAgICBpZiAodGhpcy5NZXRhTWFza0FkZHJlc3MgIT09ICIiICYmIG5ldElEID09PSAiMSIpDQogICAgICAgICAgcmV0dXJuIHRoaXMuTG9nKHRoaXMuTWV0YW1hc2tNc2cuTUVUQU1BU0tfVEVTVF9ORVQsICJNQUlOTkVUIik7DQogICAgICAgIGlmICh0aGlzLk1ldGFNYXNrQWRkcmVzcyAhPT0gIiIgJiYgbmV0SUQgPT09ICIzIikNCiAgICAgICAgICByZXR1cm4gdGhpcy5Mb2codGhpcy5NZXRhbWFza01zZy5NRVRBTUFTS19URVNUX05FVCwgIlJPUFNURU4iKTsNCiAgICAgICAgaWYgKHRoaXMuTWV0YU1hc2tBZGRyZXNzICE9PSAiIiAmJiBuZXRJRCA9PT0gIjQyIikNCiAgICAgICAgICByZXR1cm4gdGhpcy5Mb2codGhpcy5NZXRhbWFza01zZy5NRVRBTUFTS19URVNUX05FVCwgIkxPVkFOIik7DQogICAgICAgIGlmICh0aGlzLk1ldGFNYXNrQWRkcmVzcyAhPT0gIiIgJiYgbmV0SUQgPT09ICI0IikNCiAgICAgICAgICByZXR1cm4gdGhpcy5Mb2codGhpcy5NZXRhbWFza01zZy5NRVRBTUFTS19URVNUX05FVCwgIlJJTktFQlkiKTsNCiAgICAgICAgaWYgKHRoaXMuTWV0YU1hc2tBZGRyZXNzICE9PSAiIikNCiAgICAgICAgICB0aGlzLkxvZyh0aGlzLk1ldGFtYXNrTXNnLk1FVEFNQVNLX01BSU5fTkVULCAiTUFJTk5FVCIpOw0KICAgICAgfSk7DQogICAgfSwNCiAgICBMb2cobXNnLCB0eXBlID0gIiIpIHsNCiAgICAgIGNvbnN0IGxldFR5cGUgPSB0eXBlOw0KICAgICAgaWYgKGxldFR5cGUgPT09IHRoaXMudHlwZSkgcmV0dXJuOw0KICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMudXNlck1lc3NhZ2UgPT09ICJudWxsIiA/IG1zZyA6IHRoaXMudXNlck1lc3NhZ2U7DQogICAgICB0aGlzLnR5cGUgPSB0eXBlOw0KICAgICAgdGhpcy4kZW1pdCgib25Db21wbGV0ZSIsIHsNCiAgICAgICAgd2ViMzogdGhpcy53ZWIzLA0KICAgICAgICB0eXBlLA0KICAgICAgICBtZXRhTWFza0FkZHJlc3M6IHRoaXMuTWV0YU1hc2tBZGRyZXNzLA0KICAgICAgICBtZXNzYWdlLA0KICAgICAgICBuZXRJRDogdGhpcy5uZXRJRCwNCiAgICAgIH0pOw0KICAgIH0sDQogICAgd2ViM1RpbWVyQ2hlY2sod2ViMykgew0KICAgICAgdGhpcy53ZWIzID0gd2ViMzsNCiAgICAgIHRoaXMuY2hlY2tBY2NvdW50cygpOw0KICAgICAgdGhpcy5jaGVja05ldFdvcmsoKTsNCiAgICAgIHRoaXMuV2ViM0ludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5jaGVja1dlYjMoKSwgMTAwMCk7DQogICAgICB0aGlzLkFjY291bnRJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHRoaXMuY2hlY2tBY2NvdW50cygpLCAxMDAwKTsNCiAgICAgIHRoaXMuTmV0d29ya0ludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5jaGVja05ldFdvcmsoKSwgMTAwMCk7DQogICAgfSwNCiAgfSwNCiAgYXN5bmMgbW91bnRlZCgpIHsNCiAgICBpZiAod2luZG93LmV0aGVyZXVtKSB7DQogICAgICB3aW5kb3cud2ViMyA9IG5ldyBXZWIzKGV0aGVyZXVtKTsNCiAgICAgIHRyeSB7DQogICAgICAgIGF3YWl0IGV0aGVyZXVtLmVuYWJsZSgpOw0KICAgICAgICB0aGlzLndlYjNUaW1lckNoZWNrKHdpbmRvdy53ZWIzKTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuTG9nKA0KICAgICAgICAgIHRoaXMuTWV0YW1hc2tNc2cuVVNFUl9ERU5JRURfQUNDT1VOVF9BVVRIT1JJWkFUSU9OLA0KICAgICAgICAgICJVU0VSX0RFTklFRF9BQ0NPVU5UX0FVVEhPUklaQVRJT04iDQogICAgICAgICk7DQogICAgICB9DQogICAgfSBlbHNlIGlmICh3aW5kb3cud2ViMykgew0KICAgICAgd2luZG93LndlYjMgPSBuZXcgV2ViMyh3ZWIzLmN1cnJlbnRQcm92aWRlcik7DQogICAgICB0aGlzLndlYjNUaW1lckNoZWNrKHdpbmRvdy53ZWIzKTsNCiAgICB9IGVsc2Ugew0KICAgICAgdGhpcy53ZWIzID0gbnVsbDsNCiAgICAgIHRoaXMuTG9nKHRoaXMuTWV0YW1hc2tNc2cuTUVUQU1BU0tfTk9UX0lOU1RBTEwsICJOT19JTlNUQUxMX01FVEFNQVNLIik7DQogICAgICBjb25zb2xlLmVycm9yKA0KICAgICAgICAiTm9uLUV0aGVyZXVtIGJyb3dzZXIgZGV0ZWN0ZWQuIFlvdSBzaG91bGQgY29uc2lkZXIgdHJ5aW5nIE1ldGFNYXNrISINCiAgICAgICk7DQogICAgfQ0KICB9LA0KfTsNCg=="},{"version":3,"sources":["VueMetamask.vue"],"names":[],"mappingsfile":"VueMetamask.vue","sourceRoot":"node_modules/vue-metamask/src","sourcesContent":["<script>\r\nimport Web3 from \"web3\";\r\nexport default {\r\n  props: {\r\n    userMessage: {\r\n      type: String,\r\n      default: \"null\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      web3: null,\r\n      MetaMaskId: \"1\", // main net netID\r\n      netID: \"1\", // user metamask id\r\n      MetaMaskAddress: \"\", // user Address\r\n      Web3Interval: null,\r\n      AccountInterval: null,\r\n      NetworkInterval: null,\r\n      stateLog: null,\r\n      isComplete: false,\r\n      type: \"INIT\",\r\n      MetamaskMsg: {\r\n        LOAD_MATAMASK_WALLET_ERROR: \"Loading metamask error, please try later\",\r\n        EMPTY_METAMASK_ACCOUNT:\r\n          \"Please log in to your metamask to continue with this app.\",\r\n        NETWORK_ERROR: \"The connection is abnormal, please try again\",\r\n        METAMASK_NOT_INSTALL: \"Please install metamask for this application\",\r\n        METAMASK_TEST_NET: \"Currently not in the main network.\",\r\n        METAMASK_MAIN_NET: \"Currently Main network\",\r\n        USER_DENIED_ACCOUNT_AUTHORIZATION: \"User denied account authorization\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    checkWeb3() {\r\n      let web3 = window.web3;\r\n      if (typeof web3 === \"undefined\") {\r\n        this.web3 = null;\r\n        this.Log(this.MetamaskMsg.METAMASK_NOT_INSTALL, \"NO_INSTALL_METAMASK\");\r\n      }\r\n    },\r\n    checkAccounts() {\r\n      if (this.web3 === null) return;\r\n      this.web3.eth.getAccounts((err, accounts) => {\r\n        console.log();\r\n\r\n        if (err != null)\r\n          return this.Log(this.MetamaskMsg.NETWORK_ERROR, \"NETWORK_ERROR\");\r\n        if (accounts.length === 0) {\r\n          this.MetaMaskAddress = \"\";\r\n          this.Log(this.MetamaskMsg.EMPTY_METAMASK_ACCOUNT, \"NO_LOGIN\");\r\n          return;\r\n        }\r\n        this.MetaMaskAddress = accounts[0]; // user Address\r\n      });\r\n    },\r\n    checkNetWork() {\r\n      this.web3.version.getNetwork((err, netID) => {\r\n        // Main Network: 1\r\n        // Ropsten Test Network: 3\r\n        // Kovan Test Network: 42\r\n        // Rinkeby Test Network: 4\r\n        if (err != null)\r\n          return this.Log(this.MetamaskMsg.NETWORK_ERROR, \"NETWORK_ERROR\");\r\n        this.netID = netID; //User MetaMask's current status\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"1\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"MAINNET\");\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"3\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"ROPSTEN\");\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"42\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"LOVAN\");\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"4\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"RINKEBY\");\r\n        if (this.MetaMaskAddress !== \"\")\r\n          this.Log(this.MetamaskMsg.METAMASK_MAIN_NET, \"MAINNET\");\r\n      });\r\n    },\r\n    Log(msg, type = \"\") {\r\n      const letType = type;\r\n      if (letType === this.type) return;\r\n      const message = this.userMessage === \"null\" ? msg : this.userMessage;\r\n      this.type = type;\r\n      this.$emit(\"onComplete\", {\r\n        web3: this.web3,\r\n        type,\r\n        metaMaskAddress: this.MetaMaskAddress,\r\n        message,\r\n        netID: this.netID,\r\n      });\r\n    },\r\n    web3TimerCheck(web3) {\r\n      this.web3 = web3;\r\n      this.checkAccounts();\r\n      this.checkNetWork();\r\n      this.Web3Interval = setInterval(() => this.checkWeb3(), 1000);\r\n      this.AccountInterval = setInterval(() => this.checkAccounts(), 1000);\r\n      this.NetworkInterval = setInterval(() => this.checkNetWork(), 1000);\r\n    },\r\n  },\r\n  async mounted() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(ethereum);\r\n      try {\r\n        await ethereum.enable();\r\n        this.web3TimerCheck(window.web3);\r\n      } catch (error) {\r\n        this.Log(\r\n          this.MetamaskMsg.USER_DENIED_ACCOUNT_AUTHORIZATION,\r\n          \"USER_DENIED_ACCOUNT_AUTHORIZATION\"\r\n        );\r\n      }\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(web3.currentProvider);\r\n      this.web3TimerCheck(window.web3);\r\n    } else {\r\n      this.web3 = null;\r\n      this.Log(this.MetamaskMsg.METAMASK_NOT_INSTALL, \"NO_INSTALL_METAMASK\");\r\n      console.error(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  },\r\n};\r\n</script>\r\n<template>\r\n  <div id=\"vue-metamask\"></div>\r\n</template>\r\n<style scoped>\r\n#vue-metamask {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n</style>\r\n"]}]}