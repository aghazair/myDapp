{"remainingRequest":"C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vueproject\\mydapp\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\vueproject\\mydapp\\src\\App.vue","mtime":1634459546735},{"path":"C:\\vueproject\\mydapp\\node_modules\\css-loader\\dist\\cjs.js","mtime":1634459520599},{"path":"C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1634459542807},{"path":"C:\\vueproject\\mydapp\\node_modules\\postcss-loader\\src\\index.js","mtime":1634459533193},{"path":"C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634459515589},{"path":"C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1634459542805}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2FwcCB7DQogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7DQogIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOw0KICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGNvbG9yOiAjMmMzZTUwOw0KICANCn0NCg0KDQouaGlkZXsNCiAgZGlzcGxheTogbm9uZTsNCg0KfQ0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyUA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n    <div class=\"d-flex flex-column flex-md-row align-items-center pb-3 mb-4 border-bottom\">\r\n      \r\n        <span class=\"fs-4\">Learn Token</span>\r\n      \r\n\r\n     <nav class=\"d-inline-flex mt-2 mt-md-0 ms-md-auto\">\r\n         <div class=\"c_topbar\">\r\n        <button id=\"btn\" class=\"w-100 btn btn-lg btn-primary\" @click=\"connect\" type=\"button\">Connect</button>\r\n        <div id='address'></div>\r\n\r\n        </div>\r\n      </nav>\r\n      <div></div>\r\n    </div>\r\n    <div id=\"warning\" class=\"alert alert-danger hide\" role=\"alert\"></div>\r\n    <div id=\"info\" class=\"alert alert-info hide\" role=\"alert\"></div>\r\n    </header>\r\n    <div class=\"container py-3\">\r\n    <header>\r\n      <div class=\"pricing-header p-3 pb-md-4 mx-auto text-center\">\r\n        <h1 class=\"display-4 fw-normal\">My First DAPP</h1>\r\n      </div>\r\n    </header>\r\n\r\n    <main>\r\n    <section class=\"py-5 text-center container\">\r\n        <div class=\"row py-lg-5\">\r\n          <div class=\"col-lg-6 col-md-8 mx-auto\">\r\n            <h1 class=\"fw-light\">Stake Details</h1>\r\n            <p class=\"lead text-muted\" id=\"detail\"></p>\r\n            \r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div class=\"row row-cols-1 row-cols-md-3 mb-3 text-center\">\r\n        <div class=\"col\">\r\n          <div class=\"card mb-4 rounded-3 shadow-sm\">\r\n            <div class=\"card-header py-3\">\r\n              <h4 class=\"my-0 fw-normal\">Beginner</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h1 class=\"card-title pricing-card-title\">5000<small class=\"text-muted fw-light\">LRN</small></h1>\r\n              <ul class=\"list-unstyled mt-3 mb-4\">\r\n                <li>Feature 1</li>\r\n                <li>Feature 2</li>\r\n                \r\n              </ul>\r\n              <button type=\"button\" class=\"w-100 btn btn-lg btn-outline-primary\" @click=\"bignner\">Unlock</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"card mb-4 rounded-3 shadow-sm\">\r\n            <div class=\"card-header py-3\">\r\n              <h4 class=\"my-0 fw-normal\">Professional</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h1 class=\"card-title pricing-card-title\">10000<small class=\"text-muted fw-light\">LRN</small></h1>\r\n              <ul class=\"list-unstyled mt-3 mb-4\">\r\n                <li>Feature 1</li>\r\n                <li>Feature 2</li>\r\n                <li>Feature 3</li>\r\n                \r\n                \r\n              </ul>\r\n              <button type=\"button\" class=\"w-100 btn btn-lg btn-primary\" @click=\"professional\">Unlock</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"card mb-4 rounded-3 shadow-sm border-primary\">\r\n            <div class=\"card-header py-3 text-white bg-primary border-primary\">\r\n              <h4 class=\"my-0 fw-normal\">Expert</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h1 class=\"card-title pricing-card-title\">25000<small class=\"text-muted fw-light\">LRN</small></h1>\r\n              <ul class=\"list-unstyled mt-3 mb-4\">\r\n                <li>Feature 1</li>\r\n                <li>Feature 2</li>\r\n                <li>Feature 3</li>\r\n                <li>Feature 4</li>\r\n              </ul>\r\n              <button type=\"button\" class=\"w-100 btn btn-lg btn-primary\" @click=\"expert\">Unlock</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      </main>\r\n\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n/* eslint-disable */\r\n// import Topbar from './components/topbar.vue';\r\n//import Menu from './components/menu.vue';\r\nimport Web3 from 'web3';\r\nimport ABI from './contracts/learnstakecontract'\r\nconst contractAddress = '0x0E600bC9850dc8C5b915F42988f6eBCBfd475fB3';\r\nconst web3 = new Web3(window.web3.currentProvider);\r\nconst myContract =  new web3.eth.Contract(ABI, contractAddress);\r\n\r\n\r\n\r\nfunction checkNetwork()\r\n{\r\n  \r\n\r\n  if((window.ethereum.networkVersion) != 3)\r\n  {\r\n    console.log(window.ethereum.networkVersion);\r\n    return false;\r\n  }\r\n  else\r\n    return true;\r\n}\r\n//check if account is changed in metamask\r\nwindow.ethereum.on('accountsChanged', function (accounts) {\r\n  getAccount();\r\n\r\n});\r\n\r\nwindow.ethereum.on('chainChanged', (chainId) => {\r\n  if(chainId != 3)\r\n  {\r\n    alert(\"Please connect to Ropsten test network!\");\r\n  }\r\n  window.location.reload();\r\n});\r\n\r\nwindow.ethereum.on('chainChanged', (_chainId) => window.location.reload());\r\n\r\nexport default {\r\n  name: 'App',\r\n\r\n  components: {\r\n   \r\n  },\r\n  data(){\r\n            return {\r\n                msg: \"My First DAPP\"\r\n            }\r\n        },\r\n  methods:{\r\n\r\n          bignner(){\r\n            unLockMembershp(5000, \"Bigenner\");\r\n          },\r\n          professional(){\r\n            unLockMembershp(10000,\"Professional\");\r\n          },\r\n          expert(){\r\n            unLockMembershp(25000,\"Expert\");\r\n          },\r\n          withdraw(){\r\n              alert('withdraw');\r\n          },\r\n          connect(){\r\n                try{\r\n                         \r\n                    if(document.getElementById(\"btn\").innerText == \"Connected\")\r\n                    {\r\n                        alert(\"Already Connected\");\r\n                        return;\r\n                    }\r\n                    getAccount();\r\n \r\n                }\r\n                catch(error){\r\n                    // if user cancels metamask request \r\n                    if (error.code === 4001){\r\n                        console.log('Metamask Connection Cancelled');\r\n                    }\r\n                    else {\r\n                        console.log(error);\r\n                        // if unable to requst account prompt to install metamask\r\n                        alert('Install Metamask to Connect');\r\n                    }\r\n                }\r\n            }\r\n\r\n      }\r\n}\r\n// withdraw  stakes\r\nasync function withdraw(amount)\r\n{\r\n  \r\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n  const account = accounts[0];\r\n  await myContract.methods.withdrawStake(amount).send({from:account});\r\n  getAccountDetail(account);\r\n\r\n}\r\n\r\n// get account detail\r\nasync function getAccountDetail(myAddress)\r\n{\r\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    \r\n      if(accounts[0] != myAddress)\r\n      {\r\n        console.log(\"ERROR: connect metamask again!\");\r\n      }\r\n\r\n      const hasStakes = await myContract.methods.hasStake(myAddress).call(); \r\n      \r\n      const tokenName = await myContract.methods.name().call();\r\n      const accBalance = await myContract.methods.balanceOf(myAddress).call();\r\n\r\n      var membershipType = \"Not a Member\"; \r\n    \r\n        if(hasStakes >=5000 && hasStakes < 10000)\r\n        {\r\n            membershipType = \"Beginner\";\r\n        }\r\n        else if(hasStakes >= 10000 && hasStakes < 25000)\r\n        {\r\n            membershipType = \"Professional\";\r\n        }\r\n        else if(hasStakes >= 25000)\r\n        {\r\n          membershipType = \"Expert\";\r\n        }\r\n  \r\n      document.getElementById(\"detail\").innerHTML = \"Token Name : \"+ tokenName +\"<br/> Current Stakes: \" + hasStakes +\"<br /> Current Membership Type: \" + membershipType;\r\n      document.getElementById(\"detail\").innerHTML += \"<br/> Account Balnce: \"+web3.utils.fromWei(accBalance, 'ether') ;\r\n      document.getElementById(\"detail\").innerHTML += \"<button id=\\\"withdraw\\\" type=\\\"button\\\" class=\\\"w-100 btn btn-lg btn-primary\\\" >Withdraw Stakes</button>\";\r\n      document.getElementById(\"withdraw\").addEventListener(\"click\", function(){withdraw(hasStakes)},false);\r\n      \r\n\r\n\r\n}\r\n\r\n// get account info\r\n  async function getAccount() {\r\n\r\n      if(!checkNetwork())\r\n      {\r\n        alert(\"Connect to Ropsten Test Netowrk to use this DAPP!\" );\r\n        return;\r\n      }\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      const account = accounts[0];\r\n      document.getElementById(\"btn\").innerText = \"Connected\";\r\n      document.getElementById(\"address\").innerHTML = \"Account Connected : \"+account;\r\n      getAccountDetail(account);\r\n\r\n  }\r\n\r\n// unlock membership based on type \r\n async function unLockMembershp(amount, memberType) \r\n {\r\n   if(document.getElementById(\"btn\").innerText == \"Connect\")\r\n    {\r\n      document.getElementById(\"warning\").innerHTML = \"First connect with MetaMask using <b>Connect</b> Button!\";\r\n      document.getElementById(\"warning\").style.display = \"block\";\r\n    }\r\n    else\r\n    {\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      const account = accounts[0];\r\n      \r\n      var balance = await myContract.methods.balanceOf(account).call();\r\n      var _balance = web3.utils.fromWei(balance, 'ether');\r\n\r\n      if(_balance < amount)\r\n      {\r\n        var reqAmount =  amount-_balance ;\r\n\r\n        document.getElementById(\"warning\").innerHTML = \"Insufficient Balance for \"+memberType+\" Membership, buy \"+reqAmount+\"  LRN Tokens!\";\r\n        document.getElementById(\"warning\").style.display = \"block\";\r\n        \r\n      }\r\n      else // Stake \r\n      {\r\n         const hasStakes = await myContract.methods.hasStake(account).call(); \r\n\r\n         //check if already staked.\r\n        if(hasStakes > 0)\r\n        {\r\n           document.getElementById(\"info\").innerHTML = \"Already staked \"+hasStakes +\" Tokens!\";\r\n          document.getElementById(\"info\").style.display = \"block\";\r\n        }\r\n        else // if not already staked\r\n        {\r\n          console.log(myContract);\r\n           var msgSender = await myContract.methods.getSender().call();\r\n           console.log(\"message sender :\"+msgSender);\r\n           var msgSenderBalance = await myContract.methods.getSenderBalance().call();\r\n           console.log(\"message sender balance\");\r\n\r\n          console.log(amount);\r\n          try{\r\n             \r\n              var staked = await myContract.methods.stake(amount).send({from:account});\r\n              document.getElementById(\"info\").innerHTML = \"Membership Unlocked Successfully!\";\r\n              document.getElementById(\"info\").style.display = \"block\";\r\n          }\r\n          catch(e)\r\n          {\r\n              console.log(e);\r\n          }\r\n          console.log(web3.utils.toWei(amount.toString(),'ether'));\r\n        }\r\n\r\n      } \r\n      \r\n      getAccountDetail(account);\r\n \r\n    }\r\n  \r\n  //  return learnContract;\r\n}\r\n\r\n\r\n\r\n/* eslint-enable */\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  \r\n}\r\n\r\n\r\n.hide{\r\n  display: none;\r\n\r\n}\r\n</style>\r\n"]}]}