{"remainingRequest":"C:\\vueproject\\mydapp\\node_modules\\babel-loader\\lib\\index.js!C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vueproject\\mydapp\\node_modules\\vue-metamask\\src\\VueMetamask.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\vueproject\\mydapp\\node_modules\\vue-metamask\\src\\VueMetamask.vue","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3Z1ZXByb2plY3QvbXlkYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgV2ViMyBmcm9tICJ3ZWIzIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB1c2VyTWVzc2FnZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJudWxsIgogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdlYjM6IG51bGwsCiAgICAgIE1ldGFNYXNrSWQ6ICIxIiwKICAgICAgLy8gbWFpbiBuZXQgbmV0SUQKICAgICAgbmV0SUQ6ICIxIiwKICAgICAgLy8gdXNlciBtZXRhbWFzayBpZAogICAgICBNZXRhTWFza0FkZHJlc3M6ICIiLAogICAgICAvLyB1c2VyIEFkZHJlc3MKICAgICAgV2ViM0ludGVydmFsOiBudWxsLAogICAgICBBY2NvdW50SW50ZXJ2YWw6IG51bGwsCiAgICAgIE5ldHdvcmtJbnRlcnZhbDogbnVsbCwKICAgICAgc3RhdGVMb2c6IG51bGwsCiAgICAgIGlzQ29tcGxldGU6IGZhbHNlLAogICAgICB0eXBlOiAiSU5JVCIsCiAgICAgIE1ldGFtYXNrTXNnOiB7CiAgICAgICAgTE9BRF9NQVRBTUFTS19XQUxMRVRfRVJST1I6ICJMb2FkaW5nIG1ldGFtYXNrIGVycm9yLCBwbGVhc2UgdHJ5IGxhdGVyIiwKICAgICAgICBFTVBUWV9NRVRBTUFTS19BQ0NPVU5UOiAiUGxlYXNlIGxvZyBpbiB0byB5b3VyIG1ldGFtYXNrIHRvIGNvbnRpbnVlIHdpdGggdGhpcyBhcHAuIiwKICAgICAgICBORVRXT1JLX0VSUk9SOiAiVGhlIGNvbm5lY3Rpb24gaXMgYWJub3JtYWwsIHBsZWFzZSB0cnkgYWdhaW4iLAogICAgICAgIE1FVEFNQVNLX05PVF9JTlNUQUxMOiAiUGxlYXNlIGluc3RhbGwgbWV0YW1hc2sgZm9yIHRoaXMgYXBwbGljYXRpb24iLAogICAgICAgIE1FVEFNQVNLX1RFU1RfTkVUOiAiQ3VycmVudGx5IG5vdCBpbiB0aGUgbWFpbiBuZXR3b3JrLiIsCiAgICAgICAgTUVUQU1BU0tfTUFJTl9ORVQ6ICJDdXJyZW50bHkgTWFpbiBuZXR3b3JrIiwKICAgICAgICBVU0VSX0RFTklFRF9BQ0NPVU5UX0FVVEhPUklaQVRJT046ICJVc2VyIGRlbmllZCBhY2NvdW50IGF1dGhvcml6YXRpb24iCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja1dlYjM6IGZ1bmN0aW9uIGNoZWNrV2ViMygpIHsKICAgICAgdmFyIHdlYjMgPSB3aW5kb3cud2ViMzsKCiAgICAgIGlmICh0eXBlb2Ygd2ViMyA9PT0gInVuZGVmaW5lZCIpIHsKICAgICAgICB0aGlzLndlYjMgPSBudWxsOwogICAgICAgIHRoaXMuTG9nKHRoaXMuTWV0YW1hc2tNc2cuTUVUQU1BU0tfTk9UX0lOU1RBTEwsICJOT19JTlNUQUxMX01FVEFNQVNLIik7CiAgICAgIH0KICAgIH0sCiAgICBjaGVja0FjY291bnRzOiBmdW5jdGlvbiBjaGVja0FjY291bnRzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMud2ViMyA9PT0gbnVsbCkgcmV0dXJuOwogICAgICB0aGlzLndlYjMuZXRoLmdldEFjY291bnRzKGZ1bmN0aW9uIChlcnIsIGFjY291bnRzKSB7CiAgICAgICAgY29uc29sZS5sb2coKTsKICAgICAgICBpZiAoZXJyICE9IG51bGwpIHJldHVybiBfdGhpcy5Mb2coX3RoaXMuTWV0YW1hc2tNc2cuTkVUV09SS19FUlJPUiwgIk5FVFdPUktfRVJST1IiKTsKCiAgICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgX3RoaXMuTWV0YU1hc2tBZGRyZXNzID0gIiI7CgogICAgICAgICAgX3RoaXMuTG9nKF90aGlzLk1ldGFtYXNrTXNnLkVNUFRZX01FVEFNQVNLX0FDQ09VTlQsICJOT19MT0dJTiIpOwoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIF90aGlzLk1ldGFNYXNrQWRkcmVzcyA9IGFjY291bnRzWzBdOyAvLyB1c2VyIEFkZHJlc3MKICAgICAgfSk7CiAgICB9LAogICAgY2hlY2tOZXRXb3JrOiBmdW5jdGlvbiBjaGVja05ldFdvcmsoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy53ZWIzLnZlcnNpb24uZ2V0TmV0d29yayhmdW5jdGlvbiAoZXJyLCBuZXRJRCkgewogICAgICAgIC8vIE1haW4gTmV0d29yazogMQogICAgICAgIC8vIFJvcHN0ZW4gVGVzdCBOZXR3b3JrOiAzCiAgICAgICAgLy8gS292YW4gVGVzdCBOZXR3b3JrOiA0MgogICAgICAgIC8vIFJpbmtlYnkgVGVzdCBOZXR3b3JrOiA0CiAgICAgICAgaWYgKGVyciAhPSBudWxsKSByZXR1cm4gX3RoaXMyLkxvZyhfdGhpczIuTWV0YW1hc2tNc2cuTkVUV09SS19FUlJPUiwgIk5FVFdPUktfRVJST1IiKTsKICAgICAgICBfdGhpczIubmV0SUQgPSBuZXRJRDsgLy9Vc2VyIE1ldGFNYXNrJ3MgY3VycmVudCBzdGF0dXMKCiAgICAgICAgaWYgKF90aGlzMi5NZXRhTWFza0FkZHJlc3MgIT09ICIiICYmIG5ldElEID09PSAiMSIpIHJldHVybiBfdGhpczIuTG9nKF90aGlzMi5NZXRhbWFza01zZy5NRVRBTUFTS19URVNUX05FVCwgIk1BSU5ORVQiKTsKICAgICAgICBpZiAoX3RoaXMyLk1ldGFNYXNrQWRkcmVzcyAhPT0gIiIgJiYgbmV0SUQgPT09ICIzIikgcmV0dXJuIF90aGlzMi5Mb2coX3RoaXMyLk1ldGFtYXNrTXNnLk1FVEFNQVNLX1RFU1RfTkVULCAiUk9QU1RFTiIpOwogICAgICAgIGlmIChfdGhpczIuTWV0YU1hc2tBZGRyZXNzICE9PSAiIiAmJiBuZXRJRCA9PT0gIjQyIikgcmV0dXJuIF90aGlzMi5Mb2coX3RoaXMyLk1ldGFtYXNrTXNnLk1FVEFNQVNLX1RFU1RfTkVULCAiTE9WQU4iKTsKICAgICAgICBpZiAoX3RoaXMyLk1ldGFNYXNrQWRkcmVzcyAhPT0gIiIgJiYgbmV0SUQgPT09ICI0IikgcmV0dXJuIF90aGlzMi5Mb2coX3RoaXMyLk1ldGFtYXNrTXNnLk1FVEFNQVNLX1RFU1RfTkVULCAiUklOS0VCWSIpOwogICAgICAgIGlmIChfdGhpczIuTWV0YU1hc2tBZGRyZXNzICE9PSAiIikgX3RoaXMyLkxvZyhfdGhpczIuTWV0YW1hc2tNc2cuTUVUQU1BU0tfTUFJTl9ORVQsICJNQUlOTkVUIik7CiAgICAgIH0pOwogICAgfSwKICAgIExvZzogZnVuY3Rpb24gTG9nKG1zZykgewogICAgICB2YXIgdHlwZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogIiI7CiAgICAgIHZhciBsZXRUeXBlID0gdHlwZTsKICAgICAgaWYgKGxldFR5cGUgPT09IHRoaXMudHlwZSkgcmV0dXJuOwogICAgICB2YXIgbWVzc2FnZSA9IHRoaXMudXNlck1lc3NhZ2UgPT09ICJudWxsIiA/IG1zZyA6IHRoaXMudXNlck1lc3NhZ2U7CiAgICAgIHRoaXMudHlwZSA9IHR5cGU7CiAgICAgIHRoaXMuJGVtaXQoIm9uQ29tcGxldGUiLCB7CiAgICAgICAgd2ViMzogdGhpcy53ZWIzLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgbWV0YU1hc2tBZGRyZXNzOiB0aGlzLk1ldGFNYXNrQWRkcmVzcywKICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICAgIG5ldElEOiB0aGlzLm5ldElECiAgICAgIH0pOwogICAgfSwKICAgIHdlYjNUaW1lckNoZWNrOiBmdW5jdGlvbiB3ZWIzVGltZXJDaGVjayh3ZWIzKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy53ZWIzID0gd2ViMzsKICAgICAgdGhpcy5jaGVja0FjY291bnRzKCk7CiAgICAgIHRoaXMuY2hlY2tOZXRXb3JrKCk7CiAgICAgIHRoaXMuV2ViM0ludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczMuY2hlY2tXZWIzKCk7CiAgICAgIH0sIDEwMDApOwogICAgICB0aGlzLkFjY291bnRJbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmNoZWNrQWNjb3VudHMoKTsKICAgICAgfSwgMTAwMCk7CiAgICAgIHRoaXMuTmV0d29ya0ludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczMuY2hlY2tOZXRXb3JrKCk7CiAgICAgIH0sIDEwMDApOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBpZiAoIXdpbmRvdy5ldGhlcmV1bSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB3aW5kb3cud2ViMyA9IG5ldyBXZWIzKGV0aGVyZXVtKTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZXRoZXJldW0uZW5hYmxlKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX3RoaXM0LndlYjNUaW1lckNoZWNrKHdpbmRvdy53ZWIzKTsKCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CgogICAgICAgICAgICAgIF90aGlzNC5Mb2coX3RoaXM0Lk1ldGFtYXNrTXNnLlVTRVJfREVOSUVEX0FDQ09VTlRfQVVUSE9SSVpBVElPTiwgIlVTRVJfREVOSUVEX0FDQ09VTlRfQVVUSE9SSVpBVElPTiIpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGlmICh3aW5kb3cud2ViMykgewogICAgICAgICAgICAgICAgd2luZG93LndlYjMgPSBuZXcgV2ViMyh3ZWIzLmN1cnJlbnRQcm92aWRlcik7CgogICAgICAgICAgICAgICAgX3RoaXM0LndlYjNUaW1lckNoZWNrKHdpbmRvdy53ZWIzKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXM0LndlYjMgPSBudWxsOwoKICAgICAgICAgICAgICAgIF90aGlzNC5Mb2coX3RoaXM0Lk1ldGFtYXNrTXNnLk1FVEFNQVNLX05PVF9JTlNUQUxMLCAiTk9fSU5TVEFMTF9NRVRBTUFTSyIpOwoKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIk5vbi1FdGhlcmV1bSBicm93c2VyIGRldGVjdGVkLiBZb3Ugc2hvdWxkIGNvbnNpZGVyIHRyeWluZyBNZXRhTWFzayEiKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDhdXSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["VueMetamask.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport Web3 from \"web3\";\r\nexport default {\r\n  props: {\r\n    userMessage: {\r\n      type: String,\r\n      default: \"null\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      web3: null,\r\n      MetaMaskId: \"1\", // main net netID\r\n      netID: \"1\", // user metamask id\r\n      MetaMaskAddress: \"\", // user Address\r\n      Web3Interval: null,\r\n      AccountInterval: null,\r\n      NetworkInterval: null,\r\n      stateLog: null,\r\n      isComplete: false,\r\n      type: \"INIT\",\r\n      MetamaskMsg: {\r\n        LOAD_MATAMASK_WALLET_ERROR: \"Loading metamask error, please try later\",\r\n        EMPTY_METAMASK_ACCOUNT:\r\n          \"Please log in to your metamask to continue with this app.\",\r\n        NETWORK_ERROR: \"The connection is abnormal, please try again\",\r\n        METAMASK_NOT_INSTALL: \"Please install metamask for this application\",\r\n        METAMASK_TEST_NET: \"Currently not in the main network.\",\r\n        METAMASK_MAIN_NET: \"Currently Main network\",\r\n        USER_DENIED_ACCOUNT_AUTHORIZATION: \"User denied account authorization\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    checkWeb3() {\r\n      let web3 = window.web3;\r\n      if (typeof web3 === \"undefined\") {\r\n        this.web3 = null;\r\n        this.Log(this.MetamaskMsg.METAMASK_NOT_INSTALL, \"NO_INSTALL_METAMASK\");\r\n      }\r\n    },\r\n    checkAccounts() {\r\n      if (this.web3 === null) return;\r\n      this.web3.eth.getAccounts((err, accounts) => {\r\n        console.log();\r\n\r\n        if (err != null)\r\n          return this.Log(this.MetamaskMsg.NETWORK_ERROR, \"NETWORK_ERROR\");\r\n        if (accounts.length === 0) {\r\n          this.MetaMaskAddress = \"\";\r\n          this.Log(this.MetamaskMsg.EMPTY_METAMASK_ACCOUNT, \"NO_LOGIN\");\r\n          return;\r\n        }\r\n        this.MetaMaskAddress = accounts[0]; // user Address\r\n      });\r\n    },\r\n    checkNetWork() {\r\n      this.web3.version.getNetwork((err, netID) => {\r\n        // Main Network: 1\r\n        // Ropsten Test Network: 3\r\n        // Kovan Test Network: 42\r\n        // Rinkeby Test Network: 4\r\n        if (err != null)\r\n          return this.Log(this.MetamaskMsg.NETWORK_ERROR, \"NETWORK_ERROR\");\r\n        this.netID = netID; //User MetaMask's current status\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"1\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"MAINNET\");\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"3\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"ROPSTEN\");\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"42\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"LOVAN\");\r\n        if (this.MetaMaskAddress !== \"\" && netID === \"4\")\r\n          return this.Log(this.MetamaskMsg.METAMASK_TEST_NET, \"RINKEBY\");\r\n        if (this.MetaMaskAddress !== \"\")\r\n          this.Log(this.MetamaskMsg.METAMASK_MAIN_NET, \"MAINNET\");\r\n      });\r\n    },\r\n    Log(msg, type = \"\") {\r\n      const letType = type;\r\n      if (letType === this.type) return;\r\n      const message = this.userMessage === \"null\" ? msg : this.userMessage;\r\n      this.type = type;\r\n      this.$emit(\"onComplete\", {\r\n        web3: this.web3,\r\n        type,\r\n        metaMaskAddress: this.MetaMaskAddress,\r\n        message,\r\n        netID: this.netID,\r\n      });\r\n    },\r\n    web3TimerCheck(web3) {\r\n      this.web3 = web3;\r\n      this.checkAccounts();\r\n      this.checkNetWork();\r\n      this.Web3Interval = setInterval(() => this.checkWeb3(), 1000);\r\n      this.AccountInterval = setInterval(() => this.checkAccounts(), 1000);\r\n      this.NetworkInterval = setInterval(() => this.checkNetWork(), 1000);\r\n    },\r\n  },\r\n  async mounted() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(ethereum);\r\n      try {\r\n        await ethereum.enable();\r\n        this.web3TimerCheck(window.web3);\r\n      } catch (error) {\r\n        this.Log(\r\n          this.MetamaskMsg.USER_DENIED_ACCOUNT_AUTHORIZATION,\r\n          \"USER_DENIED_ACCOUNT_AUTHORIZATION\"\r\n        );\r\n      }\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(web3.currentProvider);\r\n      this.web3TimerCheck(window.web3);\r\n    } else {\r\n      this.web3 = null;\r\n      this.Log(this.MetamaskMsg.METAMASK_NOT_INSTALL, \"NO_INSTALL_METAMASK\");\r\n      console.error(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  },\r\n};\r\n</script>\r\n<template>\r\n  <div id=\"vue-metamask\"></div>\r\n</template>\r\n<style scoped>\r\n#vue-metamask {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-metamask/src"}]}