{"remainingRequest":"C:\\vueproject\\mydapp\\node_modules\\babel-loader\\lib\\index.js!C:\\vueproject\\mydapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\vueproject\\mydapp\\src\\util\\getWeb3.js","dependencies":[{"path":"C:\\vueproject\\mydapp\\src\\util\\getWeb3.js","mtime":1633206838816},{"path":"C:\\vueproject\\mydapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vueproject\\mydapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\vueproject\\mydapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBXZWIzIGZyb20gJ3dlYjMnOwovKg0KKiAxLiBDaGVjayBmb3IgaW5qZWN0ZWQgd2ViMyAobWlzdC9tZXRhbWFzaykNCiogMi4gSWYgbWV0YW1hc2svbWlzdCBjcmVhdGUgYSBuZXcgd2ViMyBpbnN0YW5jZSBhbmQgcGFzcyBvbiByZXN1bHQNCiogMy4gR2V0IG5ldHdvcmtJZCAtIE5vdyB3ZSBjYW4gY2hlY2sgdGhlIHVzZXIgaXMgY29ubmVjdGVkIHRvIHRoZSByaWdodCBuZXR3b3JrIHRvIHVzZSBvdXIgZEFwcA0KKiA0LiBHZXQgdXNlciBhY2NvdW50IGZyb20gbWV0YW1hc2sNCiogNS4gR2V0IHVzZXIgYmFsYW5jZQ0KKi8KCnZhciBnZXRXZWIzID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogIC8vIENoZWNrIGZvciBpbmplY3RlZCB3ZWIzIChtaXN0L21ldGFtYXNrKQogIHZhciB3ZWIzanMgPSB3aW5kb3cud2ViMzsKCiAgaWYgKHR5cGVvZiB3ZWIzanMgIT09ICd1bmRlZmluZWQnKSB7CiAgICB2YXIgX3dlYiA9IG5ldyBXZWIzKHdlYjNqcy5jdXJyZW50UHJvdmlkZXIpOwoKICAgIHJlc29sdmUoewogICAgICBpbmplY3RlZFdlYjM6IF93ZWIuaXNDb25uZWN0ZWQoKSwKICAgICAgd2ViMzogZnVuY3Rpb24gd2ViMygpIHsKICAgICAgICByZXR1cm4gX3dlYjsKICAgICAgfQogICAgfSk7CiAgfSBlbHNlIHsKICAgIC8vIHdlYjMgPSBuZXcgV2ViMyhuZXcgV2ViMy5wcm92aWRlcnMuSHR0cFByb3ZpZGVyKCdodHRwOi8vbG9jYWxob3N0Ojc1NDUnKSkgR0FOQUNIRSBGQUxMQkFDSwogICAgcmVqZWN0KG5ldyBFcnJvcignVW5hYmxlIHRvIGNvbm5lY3QgdG8gTWV0YW1hc2snKSk7CiAgfQp9KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgLy8gUmV0cmlldmUgbmV0d29yayBJRAogICAgcmVzdWx0LndlYjMoKS52ZXJzaW9uLmdldE5ldHdvcmsoZnVuY3Rpb24gKGVyciwgbmV0d29ya0lkKSB7CiAgICAgIGlmIChlcnIpIHsKICAgICAgICAvLyBJZiB3ZSBjYW4ndCBmaW5kIGEgbmV0d29ya0lkIGtlZXAgcmVzdWx0IHRoZSBzYW1lIGFuZCByZWplY3QgdGhlIHByb21pc2UKICAgICAgICByZWplY3QobmV3IEVycm9yKCdVbmFibGUgdG8gcmV0cmlldmUgbmV0d29yayBJRCcpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBBc3NpZ24gdGhlIG5ldHdvcmtJZCBwcm9wZXJ0eSB0byBvdXIgcmVzdWx0IGFuZCByZXNvbHZlIHByb21pc2UKICAgICAgICByZXN1bHQgPSBPYmplY3QuYXNzaWduKHt9LCByZXN1bHQsIHsKICAgICAgICAgIG5ldHdvcmtJZDogbmV0d29ya0lkCiAgICAgICAgfSk7CiAgICAgICAgcmVzb2x2ZShyZXN1bHQpOwogICAgICB9CiAgICB9KTsKICB9KTsKfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIC8vIFJldHJpZXZlIGNvaW5iYXNlCiAgICByZXN1bHQud2ViMygpLmV0aC5nZXRDb2luYmFzZShmdW5jdGlvbiAoZXJyLCBjb2luYmFzZSkgewogICAgICBpZiAoZXJyKSB7CiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignVW5hYmxlIHRvIHJldHJpZXZlIGNvaW5iYXNlJykpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdCA9IE9iamVjdC5hc3NpZ24oe30sIHJlc3VsdCwgewogICAgICAgICAgY29pbmJhc2U6IGNvaW5iYXNlCiAgICAgICAgfSk7CiAgICAgICAgcmVzb2x2ZShyZXN1bHQpOwogICAgICB9CiAgICB9KTsKICB9KTsKfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIC8vIFJldHJpZXZlIGJhbGFuY2UgZm9yIGNvaW5iYXNlCiAgICByZXN1bHQud2ViMygpLmV0aC5nZXRCYWxhbmNlKHJlc3VsdC5jb2luYmFzZSwgZnVuY3Rpb24gKGVyciwgYmFsYW5jZSkgewogICAgICBpZiAoZXJyKSB7CiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignVW5hYmxlIHRvIHJldHJpZXZlIGJhbGFuY2UgZm9yIGFkZHJlc3M6ICcgKyByZXN1bHQuY29pbmJhc2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSBPYmplY3QuYXNzaWduKHt9LCByZXN1bHQsIHsKICAgICAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICAgICB9KTsKICAgICAgICByZXNvbHZlKHJlc3VsdCk7CiAgICAgIH0KICAgIH0pOwogIH0pOwp9KTs="},{"version":3,"sources":["C:/vueproject/mydapp/src/util/getWeb3.js"],"names":["Web3","getWeb3","Promise","resolve","reject","web3js","window","web3","currentProvider","injectedWeb3","isConnected","Error","then","result","version","getNetwork","err","networkId","Object","assign","eth","getCoinbase","coinbase","getBalance","balance"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACnD;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAApB;;AACA,MAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIE,IAAI,GAAG,IAAIP,IAAJ,CAASK,MAAM,CAACG,eAAhB,CAAX;;AACAL,IAAAA,OAAO,CAAC;AACNM,MAAAA,YAAY,EAAEF,IAAI,CAACG,WAAL,EADR;AAENH,MAAAA,IAFM,kBAEE;AACN,eAAOA,IAAP;AACD;AAJK,KAAD,CAAP;AAMD,GARD,MAQO;AACL;AACAH,IAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,+BAAV,CAAD,CAAN;AACD;AACF,CAfa,EAgBXC,IAhBW,CAgBN,UAAAC,MAAM,EAAI;AACd,SAAO,IAAIX,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAS,IAAAA,MAAM,CAACN,IAAP,GAAcO,OAAd,CAAsBC,UAAtB,CAAiC,UAACC,GAAD,EAAMC,SAAN,EAAoB;AACnD,UAAID,GAAJ,EAAS;AACP;AACAZ,QAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,+BAAV,CAAD,CAAN;AACD,OAHD,MAGO;AACL;AACAE,QAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAACI,UAAAA,SAAS,EAATA;AAAD,SAA1B,CAAT;AACAd,QAAAA,OAAO,CAACU,MAAD,CAAP;AACD;AACF,KATD;AAUD,GAZM,CAAP;AAaD,CA9BW,EA+BXD,IA/BW,CA+BN,UAAAC,MAAM,EAAI;AACd,SAAO,IAAIX,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAS,IAAAA,MAAM,CAACN,IAAP,GAAca,GAAd,CAAkBC,WAAlB,CAA8B,UAACL,GAAD,EAAMM,QAAN,EAAmB;AAC/C,UAAIN,GAAJ,EAAS;AACPZ,QAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,6BAAV,CAAD,CAAN;AACD,OAFD,MAEO;AACLE,QAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAAES,UAAAA,QAAQ,EAARA;AAAF,SAA1B,CAAT;AACAnB,QAAAA,OAAO,CAACU,MAAD,CAAP;AACD;AACF,KAPD;AAQD,GAVM,CAAP;AAWD,CA3CW,EA4CXD,IA5CW,CA4CN,UAAAC,MAAM,EAAI;AACd,SAAO,IAAIX,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAS,IAAAA,MAAM,CAACN,IAAP,GAAca,GAAd,CAAkBG,UAAlB,CAA6BV,MAAM,CAACS,QAApC,EAA8C,UAACN,GAAD,EAAMQ,OAAN,EAAkB;AAC9D,UAAIR,GAAJ,EAAS;AACPZ,QAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,6CAA6CE,MAAM,CAACS,QAA9D,CAAD,CAAN;AACD,OAFD,MAEO;AACLT,QAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAAEW,UAAAA,OAAO,EAAPA;AAAF,SAA1B,CAAT;AACArB,QAAAA,OAAO,CAACU,MAAD,CAAP;AACD;AACF,KAPD;AAQD,GAVM,CAAP;AAWD,CAxDW,CAAd","sourcesContent":["import Web3 from 'web3'\r\n\r\n/*\r\n* 1. Check for injected web3 (mist/metamask)\r\n* 2. If metamask/mist create a new web3 instance and pass on result\r\n* 3. Get networkId - Now we can check the user is connected to the right network to use our dApp\r\n* 4. Get user account from metamask\r\n* 5. Get user balance\r\n*/\r\n\r\nlet getWeb3 = new Promise(function (resolve, reject) {\r\n  // Check for injected web3 (mist/metamask)\r\n  var web3js = window.web3\r\n  if (typeof web3js !== 'undefined') {\r\n    var web3 = new Web3(web3js.currentProvider)\r\n    resolve({\r\n      injectedWeb3: web3.isConnected(),\r\n      web3 () {\r\n        return web3\r\n      }\r\n    })\r\n  } else {\r\n    // web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:7545')) GANACHE FALLBACK\r\n    reject(new Error('Unable to connect to Metamask'))\r\n  }\r\n})\r\n  .then(result => {\r\n    return new Promise(function (resolve, reject) {\r\n      // Retrieve network ID\r\n      result.web3().version.getNetwork((err, networkId) => {\r\n        if (err) {\r\n          // If we can't find a networkId keep result the same and reject the promise\r\n          reject(new Error('Unable to retrieve network ID'))\r\n        } else {\r\n          // Assign the networkId property to our result and resolve promise\r\n          result = Object.assign({}, result, {networkId})\r\n          resolve(result)\r\n        }\r\n      })\r\n    })\r\n  })\r\n  .then(result => {\r\n    return new Promise(function (resolve, reject) {\r\n      // Retrieve coinbase\r\n      result.web3().eth.getCoinbase((err, coinbase) => {\r\n        if (err) {\r\n          reject(new Error('Unable to retrieve coinbase'))\r\n        } else {\r\n          result = Object.assign({}, result, { coinbase })\r\n          resolve(result)\r\n        }\r\n      })\r\n    })\r\n  })\r\n  .then(result => {\r\n    return new Promise(function (resolve, reject) {\r\n      // Retrieve balance for coinbase\r\n      result.web3().eth.getBalance(result.coinbase, (err, balance) => {\r\n        if (err) {\r\n          reject(new Error('Unable to retrieve balance for address: ' + result.coinbase))\r\n        } else {\r\n          result = Object.assign({}, result, { balance })\r\n          resolve(result)\r\n        }\r\n      })\r\n    })\r\n  })\r\n"]}]}